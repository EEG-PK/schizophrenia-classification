name: Schizophrenia classification

on:
  push:
    branches: [ "main", "development" ]
  pull_request:
    branches: [ "main", "development" ]

permissions:
  contents: read

jobs:
  build:
    name: Build ${{ matrix.os }})
    runs-on: ${{ matrix.os }}-latest

    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu", "windows"]

    defaults:
      run:
        shell: bash

    steps:
      - uses: actions/checkout@v4
      - uses: conda-incubator/setup-miniconda@v3
        with:
          miniconda-version: "latest"
          channels: conda-forge,defaults,nvidia/label/cuda-12.2.2
          activate-environment: ml_eeg_gpu_tf215_ver
          environment-file: ml_eeg_gpu_tf215_ver.yml
          python-version: 3.11
          show-channel-urls: true

      - name: Conda info
        run: conda info
      - name: Conda list
        run: conda list -n ml_eeg_gpu_tf215_ver

      - name: Lint
        run: |
            conda install -n ml_eeg_gpu_tf215_ver flake8
            conda run -n ml_eeg_gpu_tf215_ver python -m flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
            conda run -n ml_eeg_gpu_tf215_ver python -m flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: LD_LIBRARY_PATH env variable creation
        run: |
          chmod +x env_create.sh
          conda run -n ml_eeg_gpu_tf215_ver ./env_create.sh
          conda run -n ml_eeg_gpu_tf215_ver export OLD_LD_LIBRARY_PATH=${LD_LIBRARY_PATH}
          conda run -n ml_eeg_gpu_tf215_ver export LD_LIBRARY_PATH=$CONDA_PREFIX/lib/:$OLD_LD_LIBRARY_PATH

      - name: Run tftb repair
        run: conda run -n ml_eeg_gpu_tf215_ver python tftb_repair.py ml_eeg_gpu_tf215_ver 3.11

      - name: PyTests - cuda config
        run: |
          conda install -n ml_eeg_gpu_tf215_ver pytest
          conda run -n ml_eeg_gpu_tf215_ver pytest tests/test_tensorflow_setup.py

      - name: PyTests - tftb files
        run: |
          conda run -n ml_eeg_gpu_tf215_ver pytest tests/tftb.py
